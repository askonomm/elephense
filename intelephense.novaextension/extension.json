{
	"identifier": "com.thorlaksson.intelephense",
	"name": "Intelephense",
	"organization": "Kristófer Reykjalín",
	"description": "High performance, advanced PHP language support for Nova",
	"version": "1.3.0",
	"categories": ["completions", "languages"],
	"bugs": "https://lists.sr.ht/~reykjalin/public-inbox",
	"homepage": "https://git.sr.ht/~reykjalin/nova-intelephense",
	"repository": "https://git.sr.ht/~reykjalin/nova-intelephense",
	"funding": "https://intelephense.com/",
	"license": "MIT",

	"main": "main.js",

	"min_runtime": "5.1",

	"activationEvents": [
		"onLanguage:php",
		"onLanguage:phtml",
		"onLanguage:advphp",
		"onWorkspaceContains:phpcs.xml",
		"onWorkspaceContains:composer.json",
		"onWorkspaceContains:phpunit.xml"
	],

	"entitlements": {
		"process": true,
		"filesystem": "readwrite",
		"requests": true
	},

	"config": [
		{
			"key": "intelephense.language-server-path",
			"title": "Intelephense Language Server Path",
			"type": "path",
			"placeholder": "/usr/local/bin/intelephense"
		},
		{
			"type": "section",
			"title": "Workspace",
			"link": "https://github.com/bmewburn/intelephense-docs/blob/master/gettingStarted.md#workspace",
			"children": [
				{
					"key": "intelephense.files.associations",
					"title": "File Associations",
					"description": "Configure glob patterns to make files available language server features.",
					"type": "stringArray",
					"default": ["*.php", "*.phtml"]
				},
				{
					"key": "intelephense.files.maxSize",
					"title": "Maximum File Size",
					"description": "Maximum file size in bytes.",
					"type": "number",
					"default": 1000000
				},
				{
					"key": "intelephense.files.exclude",
					"title": "Excluded Paths",
					"description": "Configure glob patterns to exclude certain files and folders from all language server features.",
					"type": "stringArray",
					"default": [
						"**/.git/**",
						"**/.svn/**",
						"**/.hg/**",
						"**/CVS/**",
						"**/.DS_Store/**",
						"**/node_modules/**",
						"**/bower_components/**",
						"**/vendor/**/{Tests,tests}/**",
						"**/.history/**",
						"**/vendor/**/vendor/**"
					]
				}
			]
		},
		{
			"type": "section",
			"title": "Environment",
			"link": "https://github.com/bmewburn/intelephense-docs/blob/master/gettingStarted.md#environment",
			"children": [
				{
					"key": "intelephense.environment.phpVersion",
					"title": "PHP Version",
					"type": "string",
					"description": "A semver compatible string that represents the target PHP version. Used for providing version appropriate suggestions and diagnostics. PHP 5.3.0 and greater supported.",
					"default": "7.4.0"
				},
				{
					"key": "intelephense.environment.shortOpenTag",
					"title": "Use Short Open Tag?",
					"type": "boolean",
					"description": "When enabled '<?' will be parsed as a PHP open tag.",
					"default": false
				},
				{
					"key": "intelephense.stubs",
					"type": "stringArray",
					"description": "Configure stub files for built in symbols and common extensions. The default setting includes PHP core and all bundled extensions.",
					"title": "Stubs",
					"default": [
						"apache",
						"bcmath",
						"bz2",
						"calendar",
						"com_dotnet",
						"Core",
						"ctype",
						"curl",
						"date",
						"dba",
						"dom",
						"enchant",
						"exif",
						"FFI",
						"fileinfo",
						"filter",
						"fpm",
						"ftp",
						"gd",
						"gettext",
						"gmp",
						"hash",
						"iconv",
						"imap",
						"intl",
						"json",
						"ldap",
						"libxml",
						"mbstring",
						"meta",
						"mysqli",
						"oci8",
						"odbc",
						"openssl",
						"pcntl",
						"pcre",
						"PDO",
						"pdo_ibm",
						"pdo_mysql",
						"pdo_pgsql",
						"pdo_sqlite",
						"pgsql",
						"Phar",
						"posix",
						"pspell",
						"readline",
						"Reflection",
						"session",
						"shmop",
						"SimpleXML",
						"snmp",
						"soap",
						"sockets",
						"sodium",
						"SPL",
						"sqlite3",
						"standard",
						"superglobals",
						"sysvmsg",
						"sysvsem",
						"sysvshm",
						"tidy",
						"tokenizer",
						"xml",
						"xmlreader",
						"xmlrpc",
						"xmlwriter",
						"xsl",
						"Zend OPcache",
						"zip",
						"zlib"
					]
				},
				{
					"key": "intelephense.environment.includePaths",
					"title": "Include Paths",
					"description": "The include paths (as individual path items) as defined in the include_path ini setting. Used for resolving script inclusion.",
					"type": "pathArray",
					"default": []
				}
			]
		},
		{
			"type": "section",
			"title": "Diagnostics",
			"link": "https://github.com/bmewburn/intelephense-docs/blob/master/installation.md#configuration-options",
			"children": [
				{
					"key": "intelephense.diagnostics.enable",
					"title": "Enabled",
					"description": "Enables diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.run",
					"title": "Run diagnostics",
					"description": "Controls when diagnostics are run.",
					"type": "enum",
					"radio": true,
					"values": [
						[ "onType", "as changes are made to the document." ],
						[ "onSave", "when the document is saved." ]
					],
					"default": "onType"
				},
				{
					"key": "intelephense.diagnostics.embeddedLanguages",
					"title": "Embedded languages",
					"description": "Enables diagnostics in embedded languages.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.undefinedVariables",
					"title": "Undefined variables",
					"description": "Enables undefined variable diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.undefinedTypes",
					"title": "Undefined class, interface, and trait",
					"description": "Enables undefined class, interface, and trait diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.undefinedFunctions",
					"title": "Undefined function",
					"description": "Enables undefined function diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.undefinedConstants",
					"title": "Undefined constant",
					"description": "Enables undefined constant diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.undefinedClassConstants",
					"title": "Undefined class constant",
					"description": "Enables undefined class constant diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.undefinedMethods",
					"title": "Undefined method",
					"description": "Enables undefined method diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.undefinedProperties",
					"title": "Undefined static property",
					"description": "Enables undefined static property diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.unusedSymbols",
					"title": "Undefined variable, private member, and import",
					"description": "Enables unused variable, private member, and import diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.unexpectedTokens",
					"title": "Unexpected token",
					"description": "Enables unexpected token diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.duplicateSymbols",
					"title": "Duplicate symbol",
					"description": "Enables duplicate symbol diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.argumentCount",
					"title": "Argument count",
					"description": "Enables argument count diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.typeErrors",
					"title": "Compatibility of arguments, property assignments, and return statements",
					"description": "Enables diagnostics on type compatibility of arguments, property assignments, and return statements where types have been declared.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.deprecated",
					"title": "Deprecated",
					"description": "Enables deprecated diagnostics.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.languageConstraints",
					"title": "Languate constraint errors",
					"description": "Enables reporting of various language constraint errors.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.diagnostics.implementationErrors",
					"title": "Problems associated with method and class implementations",
					"description": "Enables reporting of problems associated with method and class implementations. For example, unimplemented methods or method signature incompatibilities.",
					"type": "boolean",
					"default": true
				}
			]
		},
		{
			"type": "section",
			"title": "Type Declarations and Annotations",
			"link": "https://github.com/bmewburn/intelephense-docs/blob/master/gettingStarted.md#type-declarations-and-annotations",
			"children": [
				{
					"key": "intelephense.compatibility.correctForBaseClassStaticUnionTypes",
					"title": "Correct For Base Class Static Union Types?",
					"description": "Resolves `BaseClass | static` union types to `static` instead of `BaseClass`.",
					"type": "boolean",
					"default": true
				},
				{
					"key": "intelephense.compatibility.correctForArrayAccessArrayAndTraversableArrayUnionTypes",
					"title": "Correct for ArrayAccess and Traversable array union types?",
					"description": "Resolves `ArrayAccess` and `Traversable` implementations that are unioned with a typed array to generic syntax. E.g. `ArrayAccessOrTraversable | ElementType[]` =>`ArrayAccessOrTraversable<mixed, ElementType>`.",
					"type": "boolean",
					"default": true
				}
			]
		},
		{
			"type": "section",
			"title": "Telemetry",
			"link": "https://github.com/bmewburn/intelephense-docs/blob/master/installation.md",
			"children": [
				{
					"key": "intelephense.telemetry.enabled",
					"title": "Enable anonymous usage statistics?",
					"description": "Anonymous usage and crash data will be sent to Azure Application Insights.",
					"type": "boolean",
					"default": false
				}
			]
		},
		{
			"type": "section",
			"title": "Extension development and debugging settings",
			"children": [
				{
					"key": "intelephense.debug.debug-mode",
					"title": "Enable debug mode",
					"type": "boolean",
					"description": "When enabled detailed information will be printed to the extension console.",
					"default": false
				}
			]
		}
	],

	"configWorkspace": [
		{
			"key": "intelephense.extension.enabled",
			"title": "Enable Intelephense",
			"description": "Enables Intelephense for this workspace.",
			"type": "boolean",
			"default": true
		},
		{
			"key": "intelephense.language-server-path",
			"title": "Intelephense Language Server Path",
			"type": "path",
			"placeholder": "/usr/local/bin/intelephense"
		},
		{
			"type": "section",
			"title": "Environment",
			"link": "https://github.com/bmewburn/intelephense-docs/blob/master/gettingStarted.md#environment",
			"children": [
				{
					"key": "intelephense.workspace-stubs",
					"type": "stringArray",
					"description": "Configure stub files for built in symbols and common extensions. The default setting includes PHP core and all bundled extensions.",
					"title": "Stubs",
					"default": [
						"apache",
						"bcmath",
						"bz2",
						"calendar",
						"com_dotnet",
						"Core",
						"ctype",
						"curl",
						"date",
						"dba",
						"dom",
						"enchant",
						"exif",
						"FFI",
						"fileinfo",
						"filter",
						"fpm",
						"ftp",
						"gd",
						"gettext",
						"gmp",
						"hash",
						"iconv",
						"imap",
						"intl",
						"json",
						"ldap",
						"libxml",
						"mbstring",
						"meta",
						"mysqli",
						"oci8",
						"odbc",
						"openssl",
						"pcntl",
						"pcre",
						"PDO",
						"pdo_ibm",
						"pdo_mysql",
						"pdo_pgsql",
						"pdo_sqlite",
						"pgsql",
						"Phar",
						"posix",
						"pspell",
						"readline",
						"Reflection",
						"session",
						"shmop",
						"SimpleXML",
						"snmp",
						"soap",
						"sockets",
						"sodium",
						"SPL",
						"sqlite3",
						"standard",
						"superglobals",
						"sysvmsg",
						"sysvsem",
						"sysvshm",
						"tidy",
						"tokenizer",
						"xml",
						"xmlreader",
						"xmlrpc",
						"xmlwriter",
						"xsl",
						"Zend OPcache",
						"zip",
						"zlib"
					]
				}
			]
		}
	],

	"commands": {
		"extensions": [
			{
				"title": "Restart Intelephense",
				"command": "com.thorlaksson.intelephense.restartServer"
			},
			{
				"title": "Reset Workspace Stubs",
				"command": "com.thorlaksson.intelephense.resetWorkspaceStubs"
			},
			{ "separator": true },
			{
				"title": "Enter license key",
				"command": "com.thorlaksson.intelephense.enter-license-key"
			}
		]
	}
}
